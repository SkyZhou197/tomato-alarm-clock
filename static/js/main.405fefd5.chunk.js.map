{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Login/Login.tsx","redux/actions/todos.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","timerId","Login","props","onChange","key","value","newState","setState","submit","a","account","password","post","Error","this","className","placeholder","prefix","UserOutlined","e","target","Password","onClick","to","React","updateTodo","TodoInput","onKeyUp","keyCode","description","postTodo","addTodo","data","resource","suffix","EnterOutlined","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","editTodo","editText","Editing","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","classNames","checked","Todos","unCompletedTodos","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","second","confirm","Modal","TomatoAction","updateTomato","ended_at","forceUpdate","showConfirm","onOk","abortTomato","onCancel","cancelText","okText","aborted","unfinishedTomato","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","_","groupBy","tometo","TodoHistoryTodoItem","todo","formatText","itemType","updated_at","finished","created_at","TabPane","Tabs","TodoHistory","finishedTodos","dailyFinishedTodos","finishedTodoList","finishedDates","date","deletedTodoList","deletedTodos","defaultActiveKey","tab","Statistics","menu","Item","LogoutOutlined","Home","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","DownOutlined","marginLeft","SignUp","onChangeAccount","onChangePassword","onChangePasswordConformation","passwordConformation","password_confirmation","linkTo","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.405fefd5.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport tomatoes from \"./tomatoes\";\r\n\r\nexport default combineReducers({ todos, tomatoes });\r\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"../actionTypes\";\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, { editing: true });\r\n        } else {\r\n          return Object.assign({}, t, { editing: false });\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const INIT_TODOS = \"INIT_TODOS\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\n\r\nexport const ADD_TOMATO = \"ADD_TOMATO\";\r\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\";\r\nexport const INIT_TOMATOES = \"INIT_TOMATOES\";\r\n","import { ADD_TOMATO, UPDATE_TOMATO, INIT_TOMATOES } from \"../actionTypes\";\r\n\r\nexport default (state: any[] = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst ENV = process.env.NODE_ENV;\r\nlet publicUrl: string = \"\";\r\n\r\nif (ENV === \"development\") {\r\n  publicUrl = \"/\";\r\n} else if (ENV === \"production\") {\r\n  publicUrl = \"/tomato-alarm-clock\";\r\n}\r\n\r\nconst history = createBrowserHistory({ basename: publicUrl });\r\n\r\nexport default history;\r\n","import axios from \"axios\";\r\nimport history from \"./history\";\r\n\r\nconst appID = \"up5kv8NEj7ZtjJZMwtwZLajG\";\r\nconst appSecret = \"s5tKzem7jgDQD9sy9nRh3R7w\";\r\n\r\n/* tslint:disable:no-string-literal */\r\nconst instance = axios.create({\r\n  baseURL: \"https://gp-server.hunger-valley.com/\",\r\n  headers: {\r\n    \"t-app-id\": appID,\r\n    \"t-app-secret\": appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    const xToken = localStorage.getItem(\"x-token\");\r\n    if (xToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${xToken}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    console.error(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  response => {\r\n    // Do something with response data\r\n    if (response.headers[\"x-token\"]) {\r\n      localStorage.setItem(\"x-token\", response.headers[\"x-token\"]);\r\n    }\r\n    return response;\r\n  },\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      console.log(\"重定向\");\r\n\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/* tslint:enable:no-string-literal */\r\nexport default instance;\r\n","import * as React from \"react\";\r\nimport \"./CountDown.scss\";\r\n\r\ninterface ICountDownProps {\r\n  timer: number;\r\n  duration: number;\r\n  onFinish: () => void;\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number;\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown() {\r\n    const min = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor((this.state.countDown / 1000) % 60);\r\n    return `${min < 10 ? `0${min}` : min}:${\r\n      second < 10 ? `0${second}` : second\r\n    }`;\r\n  }\r\n\r\n  componentDidMount() {\r\n    timerId = setInterval(() => {\r\n      const time = this.state.countDown;\r\n      this.setState({ countDown: time - 1000 });\r\n      document.title = `${this.countDown} - 番茄闹钟`;\r\n      if (time < 1000) {\r\n        document.title = \"番茄闹钟\";\r\n        this.props.onFinish();\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(timerId);\r\n  }\r\n\r\n  public render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{ width: `${percent * 100}%` }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;\r\n","import * as React from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"../../config/axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Login.scss\";\r\n\r\ninterface ILoginState {\r\n  account: string;\r\n  password: string;\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState = {};\r\n    newState[key] = value;\r\n    this.setState(newState);\r\n  };\r\n\r\n  submit = async () => {\r\n    const { account, password } = this.state;\r\n    try {\r\n      await axios.post(\"sign_in/user\", {\r\n        account,\r\n        password\r\n      });\r\n      this.props.history.push(\"/\");\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { account, password } = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>番茄闹钟用户登录</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined />}\r\n          value={account}\r\n          onChange={e => this.onChange(\"account\", e.target.value)}\r\n        />\r\n        <Input.Password\r\n          value={password}\r\n          placeholder=\"请输入密码\"\r\n          onChange={e => this.onChange(\"password\", e.target.value)}\r\n        />\r\n        <Button type=\"primary\" className=\"loginButton\" onClick={this.submit}>\r\n          登录\r\n        </Button>\r\n        <p>\r\n          如果你没有账号，请立即 <Link to=\"/signUp\">注册</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"../actionTypes\";\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n","import * as React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { EnterOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/actions/todos\";\r\nimport axios from \"../../config/axios\";\r\nimport \"antd/dist/antd.css\";\r\n\r\ninterface ITodoInputState {\r\n  description: string;\r\n}\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any;\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (e.keyCode === 13 && this.state.description !== \"\") {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post(\"todos\", {\r\n        description: this.state.description\r\n      });\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState({ description: \"\" });\r\n  };\r\n\r\n  public render() {\r\n    const { description } = this.state;\r\n    const suffix = description ? (\r\n      <EnterOutlined onClick={this.postTodo} />\r\n    ) : (\r\n      <span />\r\n    );\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加新任务\"\r\n          suffix={suffix}\r\n          value={description}\r\n          onChange={e => this.setState({ description: e.target.value })}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n","import * as React from \"react\";\r\nimport { Checkbox } from \"antd\";\r\nimport { EnterOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"./TodoItem.scss\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTodo, updateTodo } from \"../../redux/actions/todos\";\r\nimport axios from \"../../config/axios\";\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any;\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string;\r\n}\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = e => {\r\n    if (e.keyCode === 13 && this.state.editText !== \"\") {\r\n      this.updateTodo({ description: this.state.editText });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.editText}\r\n          onChange={e => this.setState({ editText: e.target.value })}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <EnterOutlined />\r\n          <DeleteOutlined onClick={e => this.updateTodo({ deleted: true })} />\r\n        </div>\r\n      </div>\r\n    );\r\n    const Text = (\r\n      <span className=\"text\" onDoubleClick={this.editTodo}>\r\n        {this.props.description}\r\n      </span>\r\n    );\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n    return (\r\n      <div className={todoItemClass} id=\"TodoItem\">\r\n        <Checkbox\r\n          checked={this.props.completed}\r\n          onChange={e => this.updateTodo({ completed: e.target.checked })}\r\n        />\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TodoInput from \"../../components/Todos/TodoInput\";\r\nimport TodoItem from \"../../components/Todos/TodoItem\";\r\nimport \"./Todos.scss\";\r\nimport { updateTodo } from \"../../redux/actions/todos\";\r\n\r\nclass Todos extends React.Component<any> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter(t => !t.deleted);\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter(t => !t.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter(t => t.completed);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput />\r\n        <div className=\"todoLists\">\r\n          {this.unCompletedTodos.map(t => (\r\n            <TodoItem key={t.id} {...t} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import * as React from \"react\";\r\nimport { Button, Modal, Input } from \"antd\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"../../config/axios\";\r\nimport CountDown from \"./CountDown\";\r\nimport \"./TomatoAction.scss\";\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  updateTomato: (payload: any) => void;\r\n  unfinishedTomato: any;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nclass TomatoAction extends React.Component<\r\n  ITomatoActionProps,\r\n  ITomatoActionState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (e.keyCode === 13 && this.state.description !== \"\") {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      });\r\n      this.setState({ description: \"\" });\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n  showConfirm = () => {\r\n    confirm({\r\n      title: \"您目前正在一个番茄工作时间中，要放弃这个番茄吗？\",\r\n      onOk: () => {\r\n        this.abortTomato();\r\n      },\r\n      onCancel() {\r\n        console.log(\"取消\");\r\n      },\r\n      cancelText: \"取消\",\r\n      okText: \"确定\"\r\n    });\r\n  };\r\n\r\n  abortTomato = () => {\r\n    this.updateTomato({ aborted: true });\r\n    document.title = \"番茄闹钟\";\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `tomatoes/${this.props.unfinishedTomato.id}`,\r\n        params\r\n      );\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let html = <div />;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = (\r\n        <Button\r\n          className=\"startTomatoButton\"\r\n          onClick={() => {\r\n            this.props.startTomato();\r\n          }}\r\n        >\r\n          开始番茄\r\n        </Button>\r\n      );\r\n    } else {\r\n      const startedAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startedAt > duration) {\r\n        html = (\r\n          <div className=\"inputWrapper\">\r\n            <Input\r\n              value={this.state.description}\r\n              placeholder=\"请输入你刚刚完成的任务\"\r\n              onChange={e => this.setState({ description: e.target.value })}\r\n              onKeyUp={e => this.onKeyUp(e)}\r\n            />\r\n            <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm} />\r\n          </div>\r\n        );\r\n      } else if (timeNow - startedAt < duration) {\r\n        const timer = duration - timeNow + startedAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown\r\n              timer={timer}\r\n              duration={duration}\r\n              onFinish={this.onFinish}\r\n            />\r\n            <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm} />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;\r\n","import * as React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport \"./TomatoList.scss\";\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any;\r\n}\r\n\r\nconst TomatoItem = function(props) {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\">\r\n        {format(props.started_at, \"H:mm\")} - {format(props.ended_at, \"H:mm\")}\r\n      </span>\r\n      <span className=\"description\">{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div key={d} className=\"dailyTomatoes\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\">{format(d, \"M月DD日\")}</span>\r\n            <span className=\"finishedCount\">完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {tomatoes.map(t => (\r\n            <TomatoItem key={t.id} {...t} />\r\n          ))}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;\r\n","import * as React from \"react\";\r\nimport TomatoAction from \"./TomatoAction\";\r\nimport TomatoList from \"./TomatoList\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Tomatoes.scss\";\r\nimport { addTomato, updateTomato } from \"../../redux/actions/tomatoes\";\r\nimport axios from \"../../config/axios\";\r\nimport _ from \"lodash\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface ITomatoesProps {\r\n  addTomato: (payload: any) => any;\r\n  updateTomato: (payload: any) => any;\r\n  initTomatoes: (payload: any[]) => any;\r\n  tomatoes: any[];\r\n}\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(\r\n      t => !t.description && !t.ended_at && !t.aborted\r\n    )[0];\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(\r\n      t => t.description && t.ended_at && !t.aborted\r\n    );\r\n\r\n    return _.groupBy(finishedTomatoes, tometo => {\r\n      return format(tometo.started_at, \"YYYY-MM-D\");\r\n    });\r\n  }\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post(\"tomatoes\", { duration: 1500000 });\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction\r\n          startTomato={this.startTomato}\r\n          unfinishedTomato={this.unfinishedTomato}\r\n          updateTomato={this.props.updateTomato}\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);\r\n","import { INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO } from \"../actionTypes\";\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport { updateTodo } from \"../../../redux/actions/todos\";\r\nimport axios from \"../../../config/axios\";\r\nimport \"./TodoHistoryTodoItem.scss\";\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any;\r\n  itemType: string;\r\n  updateTodo: (payload: any) => void;\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let action;\r\n    let formatText;\r\n    let time;\r\n    if (this.props.itemType === \"finished\") {\r\n      formatText = \"HH:mm\";\r\n      time = this.props.todo.updated_at;\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({ finished: false })}>恢复</span>\r\n          <span onClick={() => this.updateTodo({ deleted: true })}>删除</span>\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === \"deleted\") {\r\n      formatText = \"YYYY-MM-DD\";\r\n      time = this.props.todo.created_at;\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({ deleted: false })}>恢复</span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{format(time, formatText)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoHistoryTodoItem);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport { Tabs } from \"antd\";\r\nimport TodoHistoryTodoItem from \"./TodoHistoryTodoItem\";\r\nimport _ from \"lodash\";\r\nimport \"./TodoHistory.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[];\r\n}\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, todo => {\r\n      return format(todo.updated_at, \"YYYY-MM-D\");\r\n    });\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort(\r\n      (a, b) => Date.parse(b) - Date.parse(a)\r\n    );\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span>{date}</span>\r\n              <span>周五</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了{this.dailyFinishedTodos[date].length}个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todoList\">\r\n            {this.dailyFinishedTodos[date].map(todo => (\r\n              <TodoHistoryTodoItem\r\n                key={todo.id}\r\n                todo={todo}\r\n                itemType=\"finished\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n        <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\" />\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除的任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Statistics.scss\";\r\nimport TodoHistory from \"./TodoHistory/TodoHistory\";\r\n\r\nimport { format } from \"date-fns\";\r\nimport _ from \"lodash\";\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[];\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, todo => {\r\n      return format(todo.updated_at, \"YYYY-MM-D\");\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <TodoHistory />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","import * as React from \"react\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport { DownOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport Todos from \"../../components/Todos/Todos\";\r\nimport Tomatoes from \"../../components/Tomatoes/Tomatoes\";\r\nimport Statistics from \"../../components/Statistics/Statistics\";\r\nimport { connect } from \"react-redux\";\r\nimport { initTodos } from \"../../redux/actions/todos\";\r\nimport { initTomatoes } from \"../../redux/actions/tomatoes\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Home.scss\";\r\n\r\nimport axios from \"../../config/axios\";\r\n\r\nimport history from \"../../config/history\";\r\n\r\ninterface IIndexState {\r\n  user: any;\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"x-token\", \"\");\r\n  history.push(\"/login\");\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\" onClick={logout}>\r\n      <LogoutOutlined />\r\n      注销\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get(\"todos\");\r\n      const todos = response.data.resources.map(t =>\r\n        Object.assign({}, t, { editing: false })\r\n      );\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get(\"tomatoes\");\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getMe = async () => {\r\n    const response = await axios.get(\"me\");\r\n    this.setState({ user: response.data });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <span className=\"logo\">\r\n            <strong>番茄闹钟</strong>\r\n          </span>\r\n          <Dropdown overlay={menu}>\r\n            <span>\r\n              {this.state.user && this.state.user.account}\r\n              <DownOutlined style={{ marginLeft: 8 }} />\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes />\r\n          <Todos />\r\n        </main>\r\n        <Statistics />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import * as React from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"../../config/axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./SignUp.scss\";\r\n\r\ninterface ISignUpState {\r\n  account: string;\r\n  password: string;\r\n  passwordConformation: string;\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"\",\r\n      password: \"\",\r\n      passwordConformation: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeAccount = e => {\r\n    this.setState({ account: e.target.value });\r\n  };\r\n\r\n  onChangePassword = e => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  onChangePasswordConformation = e => {\r\n    this.setState({ passwordConformation: e.target.value });\r\n  };\r\n\r\n  submit = async () => {\r\n    const { account, password, passwordConformation } = this.state;\r\n    try {\r\n      await axios.post(\"sign_up/user\", {\r\n        account,\r\n        password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      this.props.history.push(\"/\");\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  linkTo = () => {\r\n    this.props.history.push(\"login\");\r\n  };\r\n  public render() {\r\n    const { account, password, passwordConformation } = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>番茄闹钟用户注册</h1>\r\n\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined />}\r\n          value={account}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n\r\n        <Input.Password\r\n          value={password}\r\n          placeholder=\"请输入密码\"\r\n          onChange={this.onChangePassword}\r\n        />\r\n\r\n        <Input.Password\r\n          value={passwordConformation}\r\n          placeholder=\"请确认密码\"\r\n          onChange={this.onChangePasswordConformation}\r\n        />\r\n\r\n        <Button type=\"primary\" className=\"signUpButton\" onClick={this.submit}>\r\n          注册\r\n        </Button>\r\n        <p>\r\n          如果你有账号，请立即 <Link to=\"/login\">登录</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import * as React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport SignUp from \"./components/SignUp/SignUp\";\nimport history from \"./config/history\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Route exact={true} path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signUp\" component={SignUp} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}